// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.atlasck.backend.domain;

import com.atlasck.backend.domain.QuestionsDataOnDemand;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

privileged aspect QuestionsIntegrationTest_Roo_IntegrationTest {
    
    declare @type: QuestionsIntegrationTest: @RunWith(SpringJUnit4ClassRunner.class);
    
    declare @type: QuestionsIntegrationTest: @ContextConfiguration(locations = "classpath:/META-INF/spring/applicationContext.xml");
    
    declare @type: QuestionsIntegrationTest: @Transactional;
    
    @Autowired
    private QuestionsDataOnDemand QuestionsIntegrationTest.dod;
    
    @Test
    public void QuestionsIntegrationTest.testCountQuestionses() {
        org.junit.Assert.assertNotNull("Data on demand for 'Questions' failed to initialize correctly", dod.getRandomQuestions());
        long count = com.atlasck.backend.domain.Questions.countQuestionses();
        org.junit.Assert.assertTrue("Counter for 'Questions' incorrectly reported there were no entries", count > 0);
    }
    
    @Test
    public void QuestionsIntegrationTest.testFindQuestions() {
        com.atlasck.backend.domain.Questions obj = dod.getRandomQuestions();
        org.junit.Assert.assertNotNull("Data on demand for 'Questions' failed to initialize correctly", obj);
        java.lang.Integer id = obj.getId();
        org.junit.Assert.assertNotNull("Data on demand for 'Questions' failed to provide an identifier", id);
        obj = com.atlasck.backend.domain.Questions.findQuestions(id);
        org.junit.Assert.assertNotNull("Find method for 'Questions' illegally returned null for id '" + id + "'", obj);
        org.junit.Assert.assertEquals("Find method for 'Questions' returned the incorrect identifier", id, obj.getId());
    }
    
    @Test
    public void QuestionsIntegrationTest.testFindAllQuestionses() {
        org.junit.Assert.assertNotNull("Data on demand for 'Questions' failed to initialize correctly", dod.getRandomQuestions());
        long count = com.atlasck.backend.domain.Questions.countQuestionses();
        org.junit.Assert.assertTrue("Too expensive to perform a find all test for 'Questions', as there are " + count + " entries; set the findAllMaximum to exceed this value or set findAll=false on the integration test annotation to disable the test", count < 250);
        java.util.List<com.atlasck.backend.domain.Questions> result = com.atlasck.backend.domain.Questions.findAllQuestionses();
        org.junit.Assert.assertNotNull("Find all method for 'Questions' illegally returned null", result);
        org.junit.Assert.assertTrue("Find all method for 'Questions' failed to return any data", result.size() > 0);
    }
    
    @Test
    public void QuestionsIntegrationTest.testFindQuestionsEntries() {
        org.junit.Assert.assertNotNull("Data on demand for 'Questions' failed to initialize correctly", dod.getRandomQuestions());
        long count = com.atlasck.backend.domain.Questions.countQuestionses();
        if (count > 20) count = 20;
        java.util.List<com.atlasck.backend.domain.Questions> result = com.atlasck.backend.domain.Questions.findQuestionsEntries(0, (int) count);
        org.junit.Assert.assertNotNull("Find entries method for 'Questions' illegally returned null", result);
        org.junit.Assert.assertEquals("Find entries method for 'Questions' returned an incorrect number of entries", count, result.size());
    }
    
    @Test
    public void QuestionsIntegrationTest.testPersist() {
        org.junit.Assert.assertNotNull("Data on demand for 'Questions' failed to initialize correctly", dod.getRandomQuestions());
        com.atlasck.backend.domain.Questions obj = dod.getNewTransientQuestions(Integer.MAX_VALUE);
        org.junit.Assert.assertNotNull("Data on demand for 'Questions' failed to provide a new transient entity", obj);
        org.junit.Assert.assertNull("Expected 'Questions' identifier to be null", obj.getId());
        obj.persist();
        obj.flush();
        org.junit.Assert.assertNotNull("Expected 'Questions' identifier to no longer be null", obj.getId());
    }
    
    @Test
    public void QuestionsIntegrationTest.testRemove() {
        com.atlasck.backend.domain.Questions obj = dod.getRandomQuestions();
        org.junit.Assert.assertNotNull("Data on demand for 'Questions' failed to initialize correctly", obj);
        java.lang.Integer id = obj.getId();
        org.junit.Assert.assertNotNull("Data on demand for 'Questions' failed to provide an identifier", id);
        obj = com.atlasck.backend.domain.Questions.findQuestions(id);
        obj.remove();
        obj.flush();
        org.junit.Assert.assertNull("Failed to remove 'Questions' with identifier '" + id + "'", com.atlasck.backend.domain.Questions.findQuestions(id));
    }
    
}
